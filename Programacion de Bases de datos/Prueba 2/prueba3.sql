
--Prueba3--
-----------------------------------------------------------------------------------requerimiento 1--------------------------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE SP_SUELDOS(ANIO NUMBER, MES NUMBER)
IS
SUMA_SUELDOS NUMBER;
COMISIONES NUMBER;
TOTAL NUMBER;
BEGIN 
	SELECT SUM(SUELDO_BASE) INTO SUMA_SUELDOS 
	FROM VENDEDORES;
	SELECT NVL(SUM(C.VALOR_COMISION), 0) INTO COMISIONES 
	FROM COMISIONES C 
	JOIN FACTURAS F ON F.FOLIO = C.FOLIO  
	WHERE EXTRACT(YEAR FROM F.FECHA) = ANIO AND EXTRACT(MONTH FROM F.FECHA) = MES;
	TOTAL := SUMA_SUELDOS + COMISIONES + ((SUMA_SUELDOS + COMISIONES) * 0.21); 
	DBMS_OUTPUT.PUT_LINE('SUMASUELDOS: ' || SUMA_SUELDOS || ' COMISIONES: ' || COMISIONES || ' TOTAL A PAGAR :' || TOTAL);
END SP_SUELDOS;

BEGIN 
	SP_SUELDOS(2015, 1);
END;
----------------------------------requerimiento 2
CREATE OR REPLACE PROCEDURE SP_JUBILADOS(p_mayores OUT NUMBER, p_mayores_trabajadores OUT NUMBER)
IS
BEGIN 
	SELECT COUNT(*) INTO p_mayores
	FROM PERSONAS p 
	WHERE round((TRUNC(SYSDATE) - p.FECHA_NACIMIENTO) / 365) = 65;

	SELECT COUNT(*) INTO p_mayores_trabajadores
	FROM PERSONAS p JOIN VENDEDORES v on v.RUT = p.RUT 
	WHERE round((TRUNC(SYSDATE) - p.FECHA_NACIMIENTO) / 365) = 65; 
END SP_JUBILADOS;

DECLARE 
	p_mayores NUMBER;
	p_mayores_trabajadores NUMBER;
BEGIN
	SP_JUBILADOS(p_mayores, p_mayores_trabajadores);
	DBMS_OUTPUT.PUT_LINE('PERSONAS CON 65 ANOS: ' || p_mayores || ' ---- CANTIDAD DE TRABAJADORES: ' || p_mayores_trabajadores);
END;


----------------------------------requerimiento 3
CREATE OR REPLACE PROCEDURE SP_COMUNAS(CANT_COMUNAS OUT NUMBER)
IS 
BEGIN 
	SELECT COUNT(COUNT(*)) INTO CANT_COMUNAS
	FROM PERSONAS GROUP BY COMUNA;
END SP_COMUNAS;

DECLARE 
	CANT_COMUNAS NUMBER;
BEGIN
	SP_COMUNAS(CANT_COMUNAS);
	DBMS_OUTPUT.PUT_LINE('CANTIDAD DE COMUNAS DISTINTAS: ' || CANT_COMUNAS);
END;
----------------------------------requerimiento 4
CREATE OR REPLACE PROCEDURE SP_INSERT_PERSONA(RUT NUMBER, DIGITO_V CHAR, PRIMER_NOMBRE VARCHAR2, SEGUNDO_NOMBRE VARCHAR2, PRIMER_APELLIDO VARCHAR2, SEGUNDO_APELLIDO VARCHAR2, FECHA_NACIMIENTO DATE, DIRECCION VARCHAR2, COMUNA NUMBER, NACIONALIDAD VARCHAR2, TELEFONO VARCHAR2, EMAIL VARCHAR2)
IS 
BEGIN 
	INSERT INTO HR.PERSONAS
	(RUT, DIGITO_V, PRIMER_NOMBRE, SEGUNDO_NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, FECHA_NACIMIENTO, DIRECCION, COMUNA, NACIONALIDAD, TELEFONO, EMAIL)	
	VALUES(RUT,DIGITO_V, PRIMER_NOMBRE, SEGUNDO_NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, FECHA_NACIMIENTO, DIRECCION , COMUNA , NACIONALIDAD , TELEFONO , EMAIL);
END SP_INSERT_PERSONA;
 
BEGIN
	SP_INSERT_PERSONA(19658551,'6', 'Nathalia', 'Carolina', 'Busnego', 'Barrientos',TO_DATE('07/30/1995','MM/DD/YY'), 'Premio Nobel 3045', 1, 'Venezolana', '+56987173937', 'Nathabusnego@gmail.com');
END;

----------------------------------requerimiento 5

CREATE OR REPLACE PACKAGE PKG IS 
	PROCEDURE SP_INSERT_PRODUCTO(ID_PRODUCTO NUMBER, MARCA VARCHAR2, MODELO VARCHAR2, DESCRIPCION VARCHAR2, VALOR_UNITARIO NUMBER);
	PROCEDURE SP_INSERT_VENDEDORES(ID_VENDEDOR NUMBER, SUELDO_BASE NUMBER, RUT NUMBER, DIGITO_V CHAR, PRIMER_NOMBRE VARCHAR2, SEGUNDO_NOMBRE VARCHAR2, PRIMER_APELLIDO VARCHAR2, SEGUNDO_APELLIDO VARCHAR2, FECHA_NACIMIENTO DATE, DIRECCION VARCHAR2, COMUNA NUMBER, NACIONALIDAD VARCHAR2, TELEFONO VARCHAR2, EMAIL VARCHAR2);
	FUNCTION F_VENDEDOR_SIN_VENTA RETURN NUMBER;
	FUNCTION F_PERSONAS_SIN_COMPRA RETURN NUMBER;
END PKG;

CREATE OR REPLACE PACKAGE BODY PKG IS 

PROCEDURE SP_INSERT_PRODUCTO(ID_PRODUCTO NUMBER, MARCA VARCHAR2, MODELO VARCHAR2, DESCRIPCION VARCHAR2, VALOR_UNITARIO NUMBER)
IS
BEGIN 
	INSERT INTO HR.PRODUCTOS
	(ID_PRODUCTO, MARCA, MODELO, DESCRIPCION, VALOR_UNITARIO)
	VALUES(ID_PRODUCTO, MARCA, MODELO, DESCRIPCION, VALOR_UNITARIO);
END SP_INSERT_PRODUCTO;

PROCEDURE SP_INSERT_VENDEDORES(ID_VENDEDOR NUMBER, SUELDO_BASE NUMBER, RUT NUMBER, DIGITO_V CHAR, PRIMER_NOMBRE VARCHAR2, SEGUNDO_NOMBRE VARCHAR2, PRIMER_APELLIDO VARCHAR2, SEGUNDO_APELLIDO VARCHAR2, FECHA_NACIMIENTO DATE, DIRECCION VARCHAR2, COMUNA NUMBER, NACIONALIDAD VARCHAR2, TELEFONO VARCHAR2, EMAIL VARCHAR2)
IS 
BEGIN 
	SP_INSERT_PERSONA(RUT, DIGITO_V, PRIMER_NOMBRE, SEGUNDO_NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, FECHA_NACIMIENTO, DIRECCION, COMUNA, NACIONALIDAD, TELEFONO, EMAIL);
	INSERT INTO HR.VENDEDORES
	(ID_VENDEDOR, RUT, EMAIL, SUELDO_BASE)
	VALUES(ID_VENDEDOR, RUT, EMAIL, SUELDO_BASE);
END SP_INSERT_VENDEDORES;

FUNCTION F_VENDEDOR_SIN_VENTA
RETURN NUMBER IS 
VENDEDORES NUMBER;
BEGIN 
	SELECT COUNT(*) INTO VENDEDORES 
	FROM VENDEDORES V 
	WHERE V.ID_VENDEDOR 
	NOT IN (SELECT V.ID_VENDEDOR FROM VENDEDORES V JOIN FACTURAS F ON V.ID_VENDEDOR = F.ID_VENDEDOR JOIN COMISIONES C ON C.FOLIO = F.FOLIO);
	RETURN VENDEDORES;
END F_VENDEDOR_SIN_VENTA;

FUNCTION F_PERSONAS_SIN_COMPRA
RETURN NUMBER IS 
PERSONAS NUMBER;
BEGIN 
	SELECT COUNT(*) INTO PERSONAS 
	FROM PERSONAS P
	WHERE P.RUT  
	NOT IN (SELECT P.RUT FROM PERSONAS P JOIN FACTURAS F ON F.CLIENTE = P.RUT);
	RETURN PERSONAS;
END F_PERSONAS_SIN_COMPRA;

END PKG;

DECLARE
VENDEDORES_SIN_VENTA NUMBER;
PERSONAS_SIN_COMPRA NUMBER;
BEGIN
	PKG.SP_INSERT_VENDEDORES(11, 250000, 2, 1, 'pepe tapia', 'tapia segundo', 'ete', 'sech', SYSDATE, 'calle falsa 123', 1, 'VE', '123456789', 'correo@correo.cl');
	PKG.SP_INSERT_PRODUCTO(27, 'FANTECH', 'MK88', 'PARLANTES', 40000);
	VENDEDORES_SIN_VENTA := F_VENDEDOR_SIN_VENTA;
	DBMS_OUTPUT.PUT_LINE('VENDEDORES SIN VENTA: ' || VENDEDORES_SIN_VENTA);
	PERSONAS_SIN_COMPRA := F_PERSONAS_SIN_COMPRA;
	DBMS_OUTPUT.PUT_LINE('PERSONAS SIN COMPRA: ' || PERSONAS_SIN_COMPRA);
END;
