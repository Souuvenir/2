
------------------------------------------Examen--------------------------------------------

CREATE OR REPLACE FUNCTION TOTAL_IVA(ANO NUMBER, MES NUMBER)
RETURN NUMBER IS 
SUMA_IVA NUMBER; 
BEGIN 
	SELECT SUM (f.IVA) INTO SUMA_IVA
	FROM FACTURAS f
	WHERE EXTRACT (YEAR FROM f.FECHA) = ANO AND EXTRACT(MONTH FROM f.FECHA) = MES;
	RETURN SUMA_IVA;
END TOTAL_IVA;

DECLARE
IVA2015 NUMBER;
BEGIN
	IVA2015 := TOTAL_IVA(2018,4);
	DBMS_OUTPUT.PUT_LINE('IVA DE FEBRERO: ' || IVA2015);
END;

SELECT *
FROM FACTURAS f ;


CREATE OR REPLACE PROCEDURE SP_PCOMUNAS(CANTC_SPER OUT NUMBER, CANTC OUT NUMBER, TOTAL OUT NUMBER)
IS 
	BEGIN
	SELECT COUNT(*) INTO CANTC
	FROM COMUNAS c;
	SELECT COUNT(COUNT(*)) INTO CANTC_SPER
	FROM PERSONAS p GROUP BY COMUNA; 
	TOTAL := CANTC - CANTC_SPER;
	DBMS_OUTPUT.PUT_LINE('CANTIDAD DE COMUNAS: ' || CANTC || ' CANTIDAD DE COMUNAS SIN PERSONAS: '|| TOTAL);	
	END SP_PCOMUNAS; 


DECLARE
	CANTC_SPER NUMBER;
	CANTC NUMBER;
	TOTAL NUMBER;
BEGIN
	SP_PCOMUNAS(CANTC_SPER, CANTC, TOTAL);
END;


CREATE OR REPLACE FUNCTION D_PAISES (TOTALP OUT NUMBER)
RETURN NUMBER IS 
BEGIN
	SELECT COUNT(COUNT (*)) INTO TOTALP
	FROM PERSONAS p JOIN COMUNAS c ON P.COMUNA = C.ID_COMUNA 
	JOIN REGIONES r ON C.ID_REGION = R.ID_REGION
	JOIN PAISES p2 ON R.ID_PAIS  =P2.ID_PAIS
	GROUP BY P2.ID_PAIS;
	RETURN TOTALP;
END D_PAISES;

DECLARE 
TOTALP NUMBER;
BEGIN
	TOTALP := D_PAISES(TOTALP);
	DBMS_OUTPUT.PUT_LINE('PAISES DISTINTOS: ' || TOTALP);
END;


create or replace trigger VALIDACION
before insert on PRODUCTOS
for each row
declare
  id int;
begin
  select ID_PRODUCTO  into id
    from PRODUCTOS p 
    where p.MARCA = :new.marca and p.MODELO = :new.modelo;
 
  if id is not null then
    raise_application_error(-20001, 'ERROR AL INSERTAR CONTENIDO DUPLICADO');
    end if;
  
	 EXCEPTION
	    WHEN NO_DATA_FOUND THEN
			DBMS_OUTPUT.PUT_LINE ('Se va a insertar');
end;


INSERT INTO HR.PRODUCTOS
(ID_PRODUCTO, MARCA, MODELO, DESCRIPCION, VALOR_UNITARIO)
VALUES(102, 'yota', 'COROLLA', 'A', 1);


CREATE OR REPLACE PACKAGE PKG_PRUEBA IS 
	PROCEDURE SP_DFACTURAS(FOLIO NUMBER, ID_PRODUCTO NUMBER, CANTIDAD NUMBER, SUBTOTAL_DETALLE NUMBER);
	PROCEDURE SP_FACTURA(FOLIO NUMBER, FECHA DATE, ID_VENDEDOR NUMBER, CLIENTE NUMBER, VALOR_NETO NUMBER, IVA NUMBER, DESCUENTO NUMBER, TOTAL NUMBER);
	FUNCTION TOTALP_IVA(FOLIO NUMBER) RETURN NUMBER;
	FUNCTION TOTAL_F(FOLIO NUMBER) RETURN NUMBER;
END PKG_PRUEBA;

CREATE OR REPLACE PACKAGE BODY PKG_PRUEBA IS

PROCEDURE SP_DFACTURAS(FOLIO NUMBER, ID_PRODUCTO NUMBER, CANTIDAD NUMBER, SUBTOTAL_DETALLE NUMBER)
IS 
BEGIN 
	INSERT INTO HR.DETALLE_FACTURAS
	(FOLIO, ID_PRODUCTO, CANTIDAD, SUBTOTAL_DETALLE)
	VALUES(FOLIO, ID_PRODUCTO, CANTIDAD, SUBTOTAL_DETALLE);
END SP_DFACTURAS;

PROCEDURE SP_FACTURA(FOLIO NUMBER, FECHA DATE, ID_VENDEDOR NUMBER, CLIENTE NUMBER, VALOR_NETO NUMBER, IVA NUMBER, DESCUENTO NUMBER, TOTAL NUMBER)
IS 
BEGIN 
	INSERT INTO HR.FACTURAS
	(FOLIO, FECHA, ID_VENDEDOR, CLIENTE, VALOR_NETO, IVA, DESCUENTO, TOTAL)
	VALUES(FOLIO, FECHA, ID_VENDEDOR, CLIENTE, VALOR_NETO, IVA, DESCUENTO, TOTAL);
END SP_FACTURA;

FUNCTION TOTALP_IVA(NFOLIO NUMBER)
RETURN NUMBER IS 
TOTAL_IVA NUMBER; 
VALOR_NETO NUMBER;
BEGIN 
	SELECT f.VALOR_NETO INTO VALOR_NETO
	FROM FACTURAS f
	WHERE F.FOLIO = NFOLIO; 
	TOTAL_IVA := (VALOR_NETO) * 0.19;
	RETURN TOTAL_IVA;
END TOTALP_IVA;

FUNCTION TOTAL_F(NFOLIO NUMBER)
RETURN NUMBER IS 
SUMA_TOTAL NUMBER;
SUMA NUMBER;
BEGIN 
	SELECT SUM (f.IVA + F.VALOR_NETO) INTO SUMA
	FROM FACTURAS f
	WHERE F.FOLIO = NFOLIO;
	RETURN SUMA_TOTAL;
END TOTAL_F;

END PKG_PRUEBA;

DECLARE
PRUEBA1 NUMBER;
PRUEBA2 NUMBER;
BEGIN
	PKG_PRUEBA.SP_DFACTURAS(2, 4, 5, 1);
	PKG_PRUEBA.SP_FACTURA(12, SYSDATE, 5, 11111111, 1, 1, 1, 1);
	PRUEBA1 := PKG_PRUEBA.TOTALP_IVA(1);
	DBMS_OUTPUT.PUT_LINE('El iva de la factura es: ' || PRUEBA1);
	PRUEBA2 := PKG_PRUEBA.TOTAL_F(2);
	DBMS_OUTPUT.PUT_LINE('El costo total de la factura es: ' || PRUEBA2);
END;


